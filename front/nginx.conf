user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
    server {
        listen 80;
        server_name back1.test *.back1.test;
        location / {
            proxy_pass http://back1;
            proxy_set_header Host $host;
        }
    }

    server {
        listen 80;
        server_name back2.test *.back2.test;
        location / {
            proxy_pass http://back2;
            proxy_set_header Host $host;
        }
    }

    server {
        server_name front.test;
        root /usr/share/nginx/html/;
        index index.html;

        listen 4443 ssl; # managed by Certbot
        ssl_certificate /cert.pem; # managed by Certbot
        ssl_certificate_key /key.pem; # managed by Certbot
    }

    server {
        if ($host = front.test) {
            return 301 https://$host$request_uri;
        } # managed by Certbot

        server_name front.test;
        listen 80;
        return 404; # managed by Certbot
    }
}

stream {
    map $ssl_preread_server_name $name {
        hostnames;
        back1.test back1;
        *.back1.test back1;
        back2.test back2;
        default local;
    }

    upstream local {
        server localhost:4443;
    }

    upstream back1 {
        server back1:443;
    }

    upstream back2 {
        server back2:443;
    }

    server {
        listen 443;
        ssl_preread on;
        proxy_pass $name;
    }
}

